//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generation date: 2014-12-17 18:12:54
namespace Exams.Model
{
    /// <summary>
    /// There are no comments for QuestionSingle in the schema.
    /// </summary>
    [global::Microsoft.OData.Client.OriginalNameAttribute("QuestionSingle")]
    public partial class QuestionSingle : global::Microsoft.OData.Client.DataServiceQuerySingle<Question>
    {
        /// <summary>
        /// Initialize a new QuestionSingle object.
        /// </summary>
        public QuestionSingle(global::Microsoft.OData.Client.DataServiceContext context, string path)
            : base(context, path) {}

        /// <summary>
        /// Initialize a new QuestionSingle object.
        /// </summary>
        public QuestionSingle(global::Microsoft.OData.Client.DataServiceContext context, string path, bool isComposable)
            : base(context, path, isComposable) {}
        /// <summary>
        /// There are no comments for Answers in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.1.0")]
        public global::Microsoft.OData.Client.DataServiceQuery<global::Exams.Model.Answer> Answers
        {
            get
            {
                if (!this.IsComposable)
                {
                    throw new global::System.NotSupportedException("The previous function is not composable.");
                }
                if ((this._Answers == null))
                {
                    this._Answers = Context.CreateQuery<global::Exams.Model.Answer>(GetPath("Answers"));
                }
                return this._Answers;
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.1.0")]
        private global::Microsoft.OData.Client.DataServiceQuery<global::Exams.Model.Answer> _Answers;
        /// <summary>
        /// There are no comments for Categories in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.1.0")]
        public global::Microsoft.OData.Client.DataServiceQuery<global::Exams.Model.Category> Categories
        {
            get
            {
                if (!this.IsComposable)
                {
                    throw new global::System.NotSupportedException("The previous function is not composable.");
                }
                if ((this._Categories == null))
                {
                    this._Categories = Context.CreateQuery<global::Exams.Model.Category>(GetPath("Categories"));
                }
                return this._Categories;
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.1.0")]
        private global::Microsoft.OData.Client.DataServiceQuery<global::Exams.Model.Category> _Categories;
    }
    /// <summary>
    /// There are no comments for Question in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [global::Microsoft.OData.Client.Key("Id")]
    [global::Microsoft.OData.Client.OriginalNameAttribute("Question")]
    public partial class Question : global::System.ComponentModel.INotifyPropertyChanged
    {
        /// <summary>
        /// Create a new Question object.
        /// </summary>
        /// <param name="ID">Initial value of Id.</param>
        /// <param name="maxPoints">Initial value of MaxPoints.</param>
        /// <param name="type">Initial value of Type.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.1.0")]
        public static Question CreateQuestion(int ID, int maxPoints, global::Exams.Model.QuestionType type)
        {
            Question question = new Question();
            question.Id = ID;
            question.MaxPoints = maxPoints;
            question.Type = type;
            return question;
        }
        /// <summary>
        /// There are no comments for Property Id in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.1.0")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("Id")]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                this.OnIdChanging(value);
                this._Id = value;
                this.OnIdChanged();
                this.OnPropertyChanged("Id");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.1.0")]
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        /// <summary>
        /// There are no comments for Property Text in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.1.0")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("Text")]
        public string Text
        {
            get
            {
                return this._Text;
            }
            set
            {
                this.OnTextChanging(value);
                this._Text = value;
                this.OnTextChanged();
                this.OnPropertyChanged("Text");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.1.0")]
        private string _Text;
        partial void OnTextChanging(string value);
        partial void OnTextChanged();
        /// <summary>
        /// There are no comments for Property MaxPoints in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.1.0")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("MaxPoints")]
        public int MaxPoints
        {
            get
            {
                return this._MaxPoints;
            }
            set
            {
                this.OnMaxPointsChanging(value);
                this._MaxPoints = value;
                this.OnMaxPointsChanged();
                this.OnPropertyChanged("MaxPoints");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.1.0")]
        private int _MaxPoints;
        partial void OnMaxPointsChanging(int value);
        partial void OnMaxPointsChanged();
        /// <summary>
        /// There are no comments for Property Type in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.1.0")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("Type")]
        public global::Exams.Model.QuestionType Type
        {
            get
            {
                return this._Type;
            }
            set
            {
                this.OnTypeChanging(value);
                this._Type = value;
                this.OnTypeChanged();
                this.OnPropertyChanged("Type");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.1.0")]
        private global::Exams.Model.QuestionType _Type;
        partial void OnTypeChanging(global::Exams.Model.QuestionType value);
        partial void OnTypeChanged();
        /// <summary>
        /// There are no comments for Property Answers in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.1.0")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("Answers")]
        public global::Microsoft.OData.Client.DataServiceCollection<global::Exams.Model.Answer> Answers
        {
            get
            {
                return this._Answers;
            }
            set
            {
                this.OnAnswersChanging(value);
                this._Answers = value;
                this.OnAnswersChanged();
                this.OnPropertyChanged("Answers");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.1.0")]
        private global::Microsoft.OData.Client.DataServiceCollection<global::Exams.Model.Answer> _Answers = new global::Microsoft.OData.Client.DataServiceCollection<global::Exams.Model.Answer>(null, global::Microsoft.OData.Client.TrackingMode.None);
        partial void OnAnswersChanging(global::Microsoft.OData.Client.DataServiceCollection<global::Exams.Model.Answer> value);
        partial void OnAnswersChanged();
        /// <summary>
        /// There are no comments for Property Categories in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.1.0")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("Categories")]
        public global::Microsoft.OData.Client.DataServiceCollection<global::Exams.Model.Category> Categories
        {
            get
            {
                return this._Categories;
            }
            set
            {
                this.OnCategoriesChanging(value);
                this._Categories = value;
                this.OnCategoriesChanged();
                this.OnPropertyChanged("Categories");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.1.0")]
        private global::Microsoft.OData.Client.DataServiceCollection<global::Exams.Model.Category> _Categories = new global::Microsoft.OData.Client.DataServiceCollection<global::Exams.Model.Category>(null, global::Microsoft.OData.Client.TrackingMode.None);
        partial void OnCategoriesChanging(global::Microsoft.OData.Client.DataServiceCollection<global::Exams.Model.Category> value);
        partial void OnCategoriesChanged();
        /// <summary>
        /// This event is raised when the value of the property is changed
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.1.0")]
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        /// <summary>
        /// The value of the property is changed
        /// </summary>
        /// <param name="property">property name</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.1.0")]
        protected virtual void OnPropertyChanged(string property)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new global::System.ComponentModel.PropertyChangedEventArgs(property));
            }
        }
    }
    /// <summary>
    /// There are no comments for CategorySingle in the schema.
    /// </summary>
    [global::Microsoft.OData.Client.OriginalNameAttribute("CategorySingle")]
    public partial class CategorySingle : global::Microsoft.OData.Client.DataServiceQuerySingle<Category>
    {
        /// <summary>
        /// Initialize a new CategorySingle object.
        /// </summary>
        public CategorySingle(global::Microsoft.OData.Client.DataServiceContext context, string path)
            : base(context, path) {}

        /// <summary>
        /// Initialize a new CategorySingle object.
        /// </summary>
        public CategorySingle(global::Microsoft.OData.Client.DataServiceContext context, string path, bool isComposable)
            : base(context, path, isComposable) {}
    }
    /// <summary>
    /// There are no comments for Category in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [global::Microsoft.OData.Client.Key("Id")]
    [global::Microsoft.OData.Client.OriginalNameAttribute("Category")]
    public partial class Category : global::System.ComponentModel.INotifyPropertyChanged
    {
        /// <summary>
        /// Create a new Category object.
        /// </summary>
        /// <param name="ID">Initial value of Id.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.1.0")]
        public static Category CreateCategory(int ID)
        {
            Category category = new Category();
            category.Id = ID;
            return category;
        }
        /// <summary>
        /// There are no comments for Property Id in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.1.0")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("Id")]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                this.OnIdChanging(value);
                this._Id = value;
                this.OnIdChanged();
                this.OnPropertyChanged("Id");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.1.0")]
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        /// <summary>
        /// There are no comments for Property Name in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.1.0")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("Name")]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                this.OnNameChanging(value);
                this._Name = value;
                this.OnNameChanged();
                this.OnPropertyChanged("Name");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.1.0")]
        private string _Name;
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        /// <summary>
        /// This event is raised when the value of the property is changed
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.1.0")]
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        /// <summary>
        /// The value of the property is changed
        /// </summary>
        /// <param name="property">property name</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.1.0")]
        protected virtual void OnPropertyChanged(string property)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new global::System.ComponentModel.PropertyChangedEventArgs(property));
            }
        }
    }
    /// <summary>
    /// There are no comments for AnswerSingle in the schema.
    /// </summary>
    [global::Microsoft.OData.Client.OriginalNameAttribute("AnswerSingle")]
    public partial class AnswerSingle : global::Microsoft.OData.Client.DataServiceQuerySingle<Answer>
    {
        /// <summary>
        /// Initialize a new AnswerSingle object.
        /// </summary>
        public AnswerSingle(global::Microsoft.OData.Client.DataServiceContext context, string path)
            : base(context, path) {}

        /// <summary>
        /// Initialize a new AnswerSingle object.
        /// </summary>
        public AnswerSingle(global::Microsoft.OData.Client.DataServiceContext context, string path, bool isComposable)
            : base(context, path, isComposable) {}
        /// <summary>
        /// There are no comments for Score in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.1.0")]
        public global::Exams.Model.ScoreSingle Score
        {
            get
            {
                if (!this.IsComposable)
                {
                    throw new global::System.NotSupportedException("The previous function is not composable.");
                }
                if ((this._Score == null))
                {
                    this._Score = new global::Exams.Model.ScoreSingle(this.Context, GetPath("Score"));
                }
                return this._Score;
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.1.0")]
        private global::Exams.Model.ScoreSingle _Score;
    }
    /// <summary>
    /// There are no comments for Answer in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [global::Microsoft.OData.Client.Key("Id")]
    [global::Microsoft.OData.Client.OriginalNameAttribute("Answer")]
    public partial class Answer : global::System.ComponentModel.INotifyPropertyChanged
    {
        /// <summary>
        /// Create a new Answer object.
        /// </summary>
        /// <param name="ID">Initial value of Id.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.1.0")]
        public static Answer CreateAnswer(int ID)
        {
            Answer answer = new Answer();
            answer.Id = ID;
            return answer;
        }
        /// <summary>
        /// There are no comments for Property Id in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.1.0")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("Id")]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                this.OnIdChanging(value);
                this._Id = value;
                this.OnIdChanged();
                this.OnPropertyChanged("Id");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.1.0")]
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        /// <summary>
        /// There are no comments for Property Text in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.1.0")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("Text")]
        public string Text
        {
            get
            {
                return this._Text;
            }
            set
            {
                this.OnTextChanging(value);
                this._Text = value;
                this.OnTextChanged();
                this.OnPropertyChanged("Text");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.1.0")]
        private string _Text;
        partial void OnTextChanging(string value);
        partial void OnTextChanged();
        /// <summary>
        /// There are no comments for Property Score in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.1.0")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("Score")]
        public global::Exams.Model.Score Score
        {
            get
            {
                return this._Score;
            }
            set
            {
                this.OnScoreChanging(value);
                this._Score = value;
                this.OnScoreChanged();
                this.OnPropertyChanged("Score");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.1.0")]
        private global::Exams.Model.Score _Score;
        partial void OnScoreChanging(global::Exams.Model.Score value);
        partial void OnScoreChanged();
        /// <summary>
        /// This event is raised when the value of the property is changed
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.1.0")]
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        /// <summary>
        /// The value of the property is changed
        /// </summary>
        /// <param name="property">property name</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.1.0")]
        protected virtual void OnPropertyChanged(string property)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new global::System.ComponentModel.PropertyChangedEventArgs(property));
            }
        }
    }
    /// <summary>
    /// There are no comments for ScoreSingle in the schema.
    /// </summary>
    [global::Microsoft.OData.Client.OriginalNameAttribute("ScoreSingle")]
    public partial class ScoreSingle : global::Microsoft.OData.Client.DataServiceQuerySingle<Score>
    {
        /// <summary>
        /// Initialize a new ScoreSingle object.
        /// </summary>
        public ScoreSingle(global::Microsoft.OData.Client.DataServiceContext context, string path)
            : base(context, path) {}

        /// <summary>
        /// Initialize a new ScoreSingle object.
        /// </summary>
        public ScoreSingle(global::Microsoft.OData.Client.DataServiceContext context, string path, bool isComposable)
            : base(context, path, isComposable) {}
    }
    /// <summary>
    /// There are no comments for Score in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [global::Microsoft.OData.Client.Key("Id")]
    [global::Microsoft.OData.Client.OriginalNameAttribute("Score")]
    public partial class Score : global::System.ComponentModel.INotifyPropertyChanged
    {
        /// <summary>
        /// Create a new Score object.
        /// </summary>
        /// <param name="ID">Initial value of Id.</param>
        /// <param name="points">Initial value of Points.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.1.0")]
        public static Score CreateScore(int ID, int points)
        {
            Score score = new Score();
            score.Id = ID;
            score.Points = points;
            return score;
        }
        /// <summary>
        /// There are no comments for Property Id in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.1.0")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("Id")]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                this.OnIdChanging(value);
                this._Id = value;
                this.OnIdChanged();
                this.OnPropertyChanged("Id");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.1.0")]
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        /// <summary>
        /// There are no comments for Property Points in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.1.0")]
        [global::Microsoft.OData.Client.OriginalNameAttribute("Points")]
        public int Points
        {
            get
            {
                return this._Points;
            }
            set
            {
                this.OnPointsChanging(value);
                this._Points = value;
                this.OnPointsChanged();
                this.OnPropertyChanged("Points");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.1.0")]
        private int _Points;
        partial void OnPointsChanging(int value);
        partial void OnPointsChanged();
        /// <summary>
        /// This event is raised when the value of the property is changed
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.1.0")]
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        /// <summary>
        /// The value of the property is changed
        /// </summary>
        /// <param name="property">property name</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.1.0")]
        protected virtual void OnPropertyChanged(string property)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new global::System.ComponentModel.PropertyChangedEventArgs(property));
            }
        }
    }
    /// <summary>
    /// There are no comments for QuestionType in the schema.
    /// </summary>
    [global::Microsoft.OData.Client.OriginalNameAttribute("QuestionType")]
    public enum QuestionType
    {
        [global::Microsoft.OData.Client.OriginalNameAttribute("SingleClause")]
        SingleClause = 0,
        [global::Microsoft.OData.Client.OriginalNameAttribute("MultupleClause")]
        MultupleClause = 1,
        [global::Microsoft.OData.Client.OriginalNameAttribute("Open")]
        Open = 2
    }
    /// <summary>
    /// Class containing all extension methods
    /// </summary>
    public static class ExtensionMethods
    {
        /// <summary>
        /// Get an entity of type global::Exams.Model.Question as global::Exams.Model.QuestionSingle specified by key from an entity set
        /// </summary>
        /// <param name="source">source entity set</param>
        /// <param name="keys">dictionary with the names and values of keys</param>
        public static global::Exams.Model.QuestionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Exams.Model.Question> source, global::System.Collections.Generic.Dictionary<string, object> keys)
        {
            return new global::Exams.Model.QuestionSingle(source.Context, source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(source.Context, keys)));
        }
        /// <summary>
        /// Get an entity of type global::Exams.Model.Question as global::Exams.Model.QuestionSingle specified by key from an entity set
        /// </summary>
        /// <param name="source">source entity set</param>
        /// <param name="id">The value of id</param>
        public static global::Exams.Model.QuestionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Exams.Model.Question> source,
            int id)
        {
            global::System.Collections.Generic.Dictionary<string, object> keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Id", id }
            };
            return new global::Exams.Model.QuestionSingle(source.Context, source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(source.Context, keys)));
        }
        /// <summary>
        /// Get an entity of type global::Exams.Model.Category as global::Exams.Model.CategorySingle specified by key from an entity set
        /// </summary>
        /// <param name="source">source entity set</param>
        /// <param name="keys">dictionary with the names and values of keys</param>
        public static global::Exams.Model.CategorySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Exams.Model.Category> source, global::System.Collections.Generic.Dictionary<string, object> keys)
        {
            return new global::Exams.Model.CategorySingle(source.Context, source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(source.Context, keys)));
        }
        /// <summary>
        /// Get an entity of type global::Exams.Model.Category as global::Exams.Model.CategorySingle specified by key from an entity set
        /// </summary>
        /// <param name="source">source entity set</param>
        /// <param name="id">The value of id</param>
        public static global::Exams.Model.CategorySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Exams.Model.Category> source,
            int id)
        {
            global::System.Collections.Generic.Dictionary<string, object> keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Id", id }
            };
            return new global::Exams.Model.CategorySingle(source.Context, source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(source.Context, keys)));
        }
        /// <summary>
        /// Get an entity of type global::Exams.Model.Answer as global::Exams.Model.AnswerSingle specified by key from an entity set
        /// </summary>
        /// <param name="source">source entity set</param>
        /// <param name="keys">dictionary with the names and values of keys</param>
        public static global::Exams.Model.AnswerSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Exams.Model.Answer> source, global::System.Collections.Generic.Dictionary<string, object> keys)
        {
            return new global::Exams.Model.AnswerSingle(source.Context, source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(source.Context, keys)));
        }
        /// <summary>
        /// Get an entity of type global::Exams.Model.Answer as global::Exams.Model.AnswerSingle specified by key from an entity set
        /// </summary>
        /// <param name="source">source entity set</param>
        /// <param name="id">The value of id</param>
        public static global::Exams.Model.AnswerSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Exams.Model.Answer> source,
            int id)
        {
            global::System.Collections.Generic.Dictionary<string, object> keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Id", id }
            };
            return new global::Exams.Model.AnswerSingle(source.Context, source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(source.Context, keys)));
        }
        /// <summary>
        /// Get an entity of type global::Exams.Model.Score as global::Exams.Model.ScoreSingle specified by key from an entity set
        /// </summary>
        /// <param name="source">source entity set</param>
        /// <param name="keys">dictionary with the names and values of keys</param>
        public static global::Exams.Model.ScoreSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Exams.Model.Score> source, global::System.Collections.Generic.Dictionary<string, object> keys)
        {
            return new global::Exams.Model.ScoreSingle(source.Context, source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(source.Context, keys)));
        }
        /// <summary>
        /// Get an entity of type global::Exams.Model.Score as global::Exams.Model.ScoreSingle specified by key from an entity set
        /// </summary>
        /// <param name="source">source entity set</param>
        /// <param name="id">The value of id</param>
        public static global::Exams.Model.ScoreSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Exams.Model.Score> source,
            int id)
        {
            global::System.Collections.Generic.Dictionary<string, object> keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Id", id }
            };
            return new global::Exams.Model.ScoreSingle(source.Context, source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(source.Context, keys)));
        }
    }
}
namespace Default
{
    /// <summary>
    /// There are no comments for Container in the schema.
    /// </summary>
    [global::Microsoft.OData.Client.OriginalNameAttribute("Container")]
    public partial class Container : global::Microsoft.OData.Client.DataServiceContext
    {
        /// <summary>
        /// Initialize a new Container object.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.1.0")]
        public Container(global::System.Uri serviceRoot) : 
                base(serviceRoot, global::Microsoft.OData.Client.ODataProtocolVersion.V4)
        {
            this.ResolveName = new global::System.Func<global::System.Type, string>(this.ResolveNameFromType);
            this.ResolveType = new global::System.Func<string, global::System.Type>(this.ResolveTypeFromName);
            this.OnContextCreated();
            this.Format.LoadServiceModel = GeneratedEdmModel.GetInstance;
            this.Format.UseJson();
        }
        partial void OnContextCreated();
        /// <summary>
        /// Since the namespace configured for this service reference
        /// in Visual Studio is different from the one indicated in the
        /// server schema, use type-mappers to map between the two.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.1.0")]
        protected global::System.Type ResolveTypeFromName(string typeName)
        {
            global::System.Type resolvedType = this.DefaultResolveType(typeName, "Exams.Model", "Exams.Model");
            if ((resolvedType != null))
            {
                return resolvedType;
            }
            resolvedType = this.DefaultResolveType(typeName, "Default", "Default");
            if ((resolvedType != null))
            {
                return resolvedType;
            }
            return null;
        }
        /// <summary>
        /// Since the namespace configured for this service reference
        /// in Visual Studio is different from the one indicated in the
        /// server schema, use type-mappers to map between the two.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.1.0")]
        protected string ResolveNameFromType(global::System.Type clientType)
        {
            global::Microsoft.OData.Client.OriginalNameAttribute originalNameAttribute = (global::Microsoft.OData.Client.OriginalNameAttribute)global::System.Linq.Enumerable.SingleOrDefault(global::Microsoft.OData.Client.Utility.GetCustomAttributes(clientType, typeof(global::Microsoft.OData.Client.OriginalNameAttribute), true));
            if (clientType.Namespace.Equals("Exams.Model", global::System.StringComparison.Ordinal))
            {
                if (originalNameAttribute != null)
                {
                    return string.Concat("Exams.Model.", originalNameAttribute.OriginalName);
                }
                return string.Concat("Exams.Model.", clientType.Name);
            }
            if (clientType.Namespace.Equals("Default", global::System.StringComparison.Ordinal))
            {
                if (originalNameAttribute != null)
                {
                    return string.Concat("Default.", originalNameAttribute.OriginalName);
                }
                return string.Concat("Default.", clientType.Name);
            }
            return null;
        }
        /// <summary>
        /// There are no comments for Questions in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.1.0")]
        public global::Microsoft.OData.Client.DataServiceQuery<global::Exams.Model.Question> Questions
        {
            get
            {
                if ((this._Questions == null))
                {
                    this._Questions = base.CreateQuery<global::Exams.Model.Question>("Questions");
                }
                return this._Questions;
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.1.0")]
        private global::Microsoft.OData.Client.DataServiceQuery<global::Exams.Model.Question> _Questions;
        /// <summary>
        /// There are no comments for Categories in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.1.0")]
        public global::Microsoft.OData.Client.DataServiceQuery<global::Exams.Model.Category> Categories
        {
            get
            {
                if ((this._Categories == null))
                {
                    this._Categories = base.CreateQuery<global::Exams.Model.Category>("Categories");
                }
                return this._Categories;
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.1.0")]
        private global::Microsoft.OData.Client.DataServiceQuery<global::Exams.Model.Category> _Categories;
        /// <summary>
        /// There are no comments for Answers in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.1.0")]
        public global::Microsoft.OData.Client.DataServiceQuery<global::Exams.Model.Answer> Answers
        {
            get
            {
                if ((this._Answers == null))
                {
                    this._Answers = base.CreateQuery<global::Exams.Model.Answer>("Answers");
                }
                return this._Answers;
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.1.0")]
        private global::Microsoft.OData.Client.DataServiceQuery<global::Exams.Model.Answer> _Answers;
        /// <summary>
        /// There are no comments for Questions in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.1.0")]
        public void AddToQuestions(global::Exams.Model.Question question)
        {
            base.AddObject("Questions", question);
        }
        /// <summary>
        /// There are no comments for Categories in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.1.0")]
        public void AddToCategories(global::Exams.Model.Category category)
        {
            base.AddObject("Categories", category);
        }
        /// <summary>
        /// There are no comments for Answers in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.1.0")]
        public void AddToAnswers(global::Exams.Model.Answer answer)
        {
            base.AddObject("Answers", answer);
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.1.0")]
        private abstract class GeneratedEdmModel
        {
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.1.0")]
            private static global::Microsoft.OData.Edm.IEdmModel ParsedModel = LoadModelFromString();
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.1.0")]
            private const string Edmx = @"<edmx:Edmx Version=""4.0"" xmlns:edmx=""http://docs.oasis-open.org/odata/ns/edmx"">
  <edmx:DataServices>
    <Schema Namespace=""Exams.Model"" xmlns=""http://docs.oasis-open.org/odata/ns/edm"">
      <EntityType Name=""Question"">
        <Key>
          <PropertyRef Name=""Id"" />
        </Key>
        <Property Name=""Id"" Type=""Edm.Int32"" Nullable=""false"" />
        <Property Name=""Text"" Type=""Edm.String"" />
        <Property Name=""MaxPoints"" Type=""Edm.Int32"" Nullable=""false"" />
        <Property Name=""Type"" Type=""Exams.Model.QuestionType"" Nullable=""false"" />
        <NavigationProperty Name=""Answers"" Type=""Collection(Exams.Model.Answer)"" />
        <NavigationProperty Name=""Categories"" Type=""Collection(Exams.Model.Category)"" />
      </EntityType>
      <EntityType Name=""Category"">
        <Key>
          <PropertyRef Name=""Id"" />
        </Key>
        <Property Name=""Id"" Type=""Edm.Int32"" Nullable=""false"" />
        <Property Name=""Name"" Type=""Edm.String"" />
      </EntityType>
      <EntityType Name=""Answer"">
        <Key>
          <PropertyRef Name=""Id"" />
        </Key>
        <Property Name=""Id"" Type=""Edm.Int32"" Nullable=""false"" />
        <Property Name=""Text"" Type=""Edm.String"" />
        <NavigationProperty Name=""Score"" Type=""Exams.Model.Score"" />
      </EntityType>
      <EntityType Name=""Score"">
        <Key>
          <PropertyRef Name=""Id"" />
        </Key>
        <Property Name=""Id"" Type=""Edm.Int32"" Nullable=""false"" />
        <Property Name=""Points"" Type=""Edm.Int32"" Nullable=""false"" />
      </EntityType>
      <EnumType Name=""QuestionType"">
        <Member Name=""SingleClause"" Value=""0"" />
        <Member Name=""MultupleClause"" Value=""1"" />
        <Member Name=""Open"" Value=""2"" />
      </EnumType>
    </Schema>
    <Schema Namespace=""Default"" xmlns=""http://docs.oasis-open.org/odata/ns/edm"">
      <EntityContainer Name=""Container"">
        <EntitySet Name=""Questions"" EntityType=""Exams.Model.Question"">
          <NavigationPropertyBinding Path=""Answers"" Target=""Answers"" />
          <NavigationPropertyBinding Path=""Categories"" Target=""Categories"" />
        </EntitySet>
        <EntitySet Name=""Categories"" EntityType=""Exams.Model.Category"" />
        <EntitySet Name=""Answers"" EntityType=""Exams.Model.Answer"" />
      </EntityContainer>
    </Schema>
  </edmx:DataServices>
</edmx:Edmx>";
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.1.0")]
            public static global::Microsoft.OData.Edm.IEdmModel GetInstance()
            {
                return ParsedModel;
            }
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.1.0")]
            private static global::Microsoft.OData.Edm.IEdmModel LoadModelFromString()
            {
                global::System.Xml.XmlReader reader = CreateXmlReader(Edmx);
                try
                {
                    return global::Microsoft.OData.Edm.Csdl.EdmxReader.Parse(reader);
                }
                finally
                {
                    ((global::System.IDisposable)(reader)).Dispose();
                }
            }
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.1.0")]
            private static global::System.Xml.XmlReader CreateXmlReader(string edmxToParse)
            {
                return global::System.Xml.XmlReader.Create(new global::System.IO.StringReader(edmxToParse));
            }
        }
    }
}
